name: Run linter and tests
on: [push, pull_request]

jobs:
  tests-postgres:
    runs-on: ubuntu-latest
    env:
      USE_POSTGRES_DB: postgres
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
        django-version:
          - "2.2"
          - "3.1"
          - "3.2"
        drf-version:
          - "3.10"
          - "3.11"
          - "3.12"
        exclude:
          - python-version: "3.5"
            django-version: "3.1"
          - python-version: "3.5"
            django-version: "3.2"
          # DRF 3.10 imports FieldDoesNotExist from django.db.models,
          # which has been moved to django.core.exceptions as of Django 3.1
          - django-version: "3.1"
            drf-version: "3.10"
          - django-version: "3.2"
            drf-version: "3.10"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 codecov

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install Django version
      run: |
        python -m pip install "Django==${{ matrix.django-version }}.*"

    - name: Install DRF version
      run: |
        python -m pip install "djangorestframework==${{ matrix.drf-version }}.*"

    - name: Python, Django and DRF versions
      run: |
        echo "Python ${{ matrix.python-version }} -> Django ${{ matrix.django-version }} -> DRF ${{ matrix.drf-version }}"
        python --version
        echo "Django: `django-admin --version`"
        echo "DRF: `pip show djangorestframework|grep Version|sed s/Version:\ //`"

    - name: Install psycopg2
      run: pip install psycopg2==2.8.6

    - name: Setup environment
      run: |
        pip install -e .
        python setup.py install

    - name: Run tests
      run: |
        # prepare Django project: link all necessary data from the test project into the root directory
        # Hint: Simply changing the directory does not work (leads to missing files in coverage report)
        ln -s ./tests/test test
        ln -s ./tests/manage.py manage.py
        ln -s ./tests/settings.py settings.py
        ln -s ./tests/urls.py urls.py

        # run tests with coverage
        coverage run --source='./django_rest_passwordreset' manage.py test
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  tests-mysql:
    runs-on: ubuntu-latest
    env:
      USE_MYSQL_DB: mysql
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
        django-version:
          - "2.2"
          - "3.1"
          - "3.2"
        drf-version:
          - "3.10"
          - "3.11"
          - "3.12"
        exclude:
          - python-version: "3.5"
            django-version: "3.1"
          - python-version: "3.5"
            django-version: "3.2"
          # DRF 3.10 imports FieldDoesNotExist from django.db.models,
          # which has been moved to django.core.exceptions as of Django 3.1
          - django-version: "3.1"
            drf-version: "3.10"
          - django-version: "3.2"
            drf-version: "3.10"
    services:
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: mysql
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_ROOT_PASSWORD: mysql-root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 codecov

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install Django version
      run: |
        python -m pip install "Django==${{ matrix.django-version }}.*"

    - name: Install DRF version
      run: |
        python -m pip install "djangorestframework==${{ matrix.drf-version }}.*"

    - name: Python, Django and DRF versions
      run: |
        echo "Python ${{ matrix.python-version }} -> Django ${{ matrix.django-version }} -> DRF ${{ matrix.drf-version }}"
        python --version
        echo "Django: `django-admin --version`"
        echo "DRF: `pip show djangorestframework|grep Version|sed s/Version:\ //`"

    - name: Install mysqlclient
      run: pip install mysqlclient

    - name: Setup environment
      run: |
        pip install -e .
        python setup.py install

    - name: Run tests
      run: |
        # prepare Django project: link all necessary data from the test project into the root directory
        # Hint: Simply changing the directory does not work (leads to missing files in coverage report)
        ln -s ./tests/test test
        ln -s ./tests/manage.py manage.py
        ln -s ./tests/settings.py settings.py
        ln -s ./tests/urls.py urls.py

        # run tests with coverage
        coverage run --source='./django_rest_passwordreset' manage.py test
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  tests-sqlite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "3.2"
          - "4.0"
          - "4.1"
        drf-version:
          - "3.12"
          - "3.13"
        exclude:
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.1"
          - drf-version: "3.12"
            django-version: "4.0"
          - drf-version: "3.12"
            django-version: "4.1"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 codecov

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install Django version
      run: |
        python -m pip install "Django==${{ matrix.django-version }}.*"

    - name: Install DRF version
      run: |
        python -m pip install "djangorestframework==${{ matrix.drf-version }}.*"

    - name: Python, Django and DRF versions
      run: |
        echo "Python ${{ matrix.python-version }} -> Django ${{ matrix.django-version }} -> DRF ${{ matrix.drf-version }}"
        python --version
        echo "Django: `django-admin --version`"
        echo "DRF: `pip show djangorestframework|grep Version|sed s/Version:\ //`"

    - name: Setup environment
      run: |
        pip install -e .
        python setup.py install

    - name: Run tests
      run: |
        # prepare Django project: link all necessary data from the test project into the root directory
        # Hint: Simply changing the directory does not work (leads to missing files in coverage report)
        ln -s ./tests/test test
        ln -s ./tests/manage.py manage.py
        ln -s ./tests/settings.py settings.py
        ln -s ./tests/urls.py urls.py

        # run tests with coverage
        coverage run --source='./django_rest_passwordreset' manage.py test
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
